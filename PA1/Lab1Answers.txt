1)
ADVANTAGES OF RANDOM SCHEDULER:
	a) Starvation of processes is avoided in this scheduler.
	b) Scheduling is fair, since all the processes get chance to run.
DISADVANTAGES OF RANDOM SCHEDULER:
	a) Random scheduler is highly unpredictable as process to be executed is slected on random number generated.
	b) Time for context switch is more than that of default XINU scheduler.
ADVANTAGES OF LINUX-LIKE SCHEDULER:
	a) Starvation of processes is avoided in this scheduler.
	b) Ensures fair scheduling and make sures process with higher priority gets more time to run.
DISADVANTAGES OF LINUX-LIKE SCHEDULER:
	a) Time for context switch is more than that of default XINU scheduler.
	b) Involves overhead as goodness values are compared each and every time. 
ADVANTAGES OF ROUND ROBIN SCHEDULER:
	a) It is simple scheduling algorithm.
	b) Ensures fairness between equal priority processes by giving turns to execute.
DISADVANTAGES OF ROUND ROBIN SCHEDULER:
	a) Low priority processes suffers starvation as high priority processes are need to be executed.
	b) Additional overhead when processes with equal priority's are present.

2)
The priorities for the process will depend on CPU allocation time itself. Because random number generated will have more chances of
picking up in higher priority process range. So, for the processes with CPU time as 20%, 30% and 50%, the priorities should be in the
ratio of 2:3:5 respectively.
So, in general for N-processes with CPU times as t1, t2, t3, ....., tn
The priorities ratio will be as t1:t2:t3:........:tn.
	
3)
RANDOM SCHEDULER:
NULL process is first process that will be executed. We add all the process priority's and generate a random number
and selects process for execution based on random number generated. If there are no processes in ready queue, the sum of priority's will be 0 
and NULL process is executed.

LINUX-LIKE SCHEDULER:
In LINUX-LIKE scheduler, process that will be executed will be chosen based on goodness value for that process. 
So, in each epoch, goodness value is calculated and process with highest goodness is chosen. goodness is sum of process priority plus counter.
Therefore, for NULL process the goodness is 0. So, NULL process get chance to execute only when there are no other runnable processes in an epoch.
 
DEFAULT XINU SCHEDULER:
The XINU scheduler allocates equal time slots for all and chooses the process with highest priority. 
So, since the NULL process has priority of 0, it will not be chosen until all other processes with priority
greater than 0 are completed. Thus NULL process will be executed at the end of the time slot.

